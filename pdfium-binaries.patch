diff --git a/patches/wasm/partition_allocator.patch b/patches/wasm/partition_allocator.patch
deleted file mode 100644
index cd349ba..0000000
--- a/patches/wasm/partition_allocator.patch
+++ /dev/null
@@ -1,13 +0,0 @@
-diff --git a/partition_alloc_base/threading/platform_thread_posix.cc b/partition_alloc_base/threading/platform_thread_posix.cc
-index 2c00380..ce93b92 100644
---- a/partition_alloc_base/threading/platform_thread_posix.cc
-+++ b/partition_alloc_base/threading/platform_thread_posix.cc
-@@ -121,7 +121,7 @@ PlatformThreadId PlatformThread::CurrentId() {
- #elif BUILDFLAG(IS_NACL) && !defined(__GLIBC__)
-   // Pointers are 32-bits in NaCl.
-   return reinterpret_cast<int32_t>(pthread_self());
--#elif BUILDFLAG(IS_POSIX) && BUILDFLAG(IS_AIX)
-+#elif BUILDFLAG(IS_POSIX) && (BUILDFLAG(IS_AIX) || defined(OS_ASMJS))
-   return pthread_self();
- #elif BUILDFLAG(IS_POSIX) && !BUILDFLAG(IS_AIX)
-   return reinterpret_cast<int64_t>(pthread_self());
diff --git a/steps/01-install.sh b/steps/01-install.sh
index da9b55f..295a3b2 100755
--- a/steps/01-install.sh
+++ b/steps/01-install.sh
@@ -55,8 +55,8 @@ case "$TARGET_OS-$TARGET_LIBC-$TARGET_CPU" in
       git clone https://github.com/emscripten-core/emsdk.git
     fi
     pushd emsdk
-    ./emsdk install 2.0.24
-    ./emsdk activate 2.0.24
+    ./emsdk install 3.1.24
+    ./emsdk activate 3.1.24
     echo "$PWD/upstream/emscripten" >> "$PATH_FILE"
     echo "$PWD/upstream/bin" >> "$PATH_FILE"
     popd
@@ -67,4 +67,4 @@ esac
 if [ "$TARGET_LIBC" == "musl" ]; then
   sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
   sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10
-fi
\ No newline at end of file
+fi
diff --git a/steps/02-checkout.sh b/steps/02-checkout.sh
index 3fcc8fe..3b279ac 100755
--- a/steps/02-checkout.sh
+++ b/steps/02-checkout.sh
@@ -18,10 +18,10 @@ echo "target_os = [ '$OS' ]" >> .gclient
 
 # Reset
 if [ -e 'pdfium' ]; then
-  for folder in pdfium pdfium/build pdfium/third_party/libjpeg_turbo pdfium/base/allocator/partition_allocator; do
+  for folder in pdfium pdfium/build pdfium/third_party/libjpeg_turbo; do
     git -C $folder reset --hard
     git -C $folder clean -df
   done
 fi
 
-gclient sync -r "origin/${PDFium_BRANCH:-main}" --no-history --shallow
\ No newline at end of file
+gclient sync -r "origin/${PDFium_BRANCH:-main}" --no-history --shallow
diff --git a/steps/03-patch.sh b/steps/03-patch.sh
index d3fec87..ff7373a 100755
--- a/steps/03-patch.sh
+++ b/steps/03-patch.sh
@@ -26,7 +26,6 @@ case "$OS" in
   wasm)
     git apply -v "$PATCHES/wasm/pdfium.patch"
     git -C build apply -v "$PATCHES/wasm/build.patch"
-    git -C base/allocator/partition_allocator apply -v "$PATCHES/wasm/partition_allocator.patch"
     mkdir -p "build/toolchain/wasm"
     cp "$PATCHES/wasm/toolchain.gn" "build/toolchain/wasm/BUILD.gn"
     mkdir -p "build/config/wasm"
diff --git a/steps/05-configure.sh b/steps/05-configure.sh
index 7687e22..bd9c9d8 100755
--- a/steps/05-configure.sh
+++ b/steps/05-configure.sh
@@ -31,6 +31,7 @@ mkdir -p "$BUILD"
       ;;
     wasm):
       echo 'pdf_is_complete_lib = true'
+      echo 'pdf_use_partition_alloc = false'
       echo 'is_clang = false'
       ;;
   esac
@@ -48,4 +49,4 @@ mkdir -p "$BUILD"
 # Generate Ninja files
 pushd "$SOURCE"
 gn gen "$BUILD"
-popd
\ No newline at end of file
+popd
diff --git a/steps/06-build.sh b/steps/06-build.sh
index 27dbcb0..fd7b908 100755
--- a/steps/06-build.sh
+++ b/steps/06-build.sh
@@ -15,8 +15,11 @@ if [ "$TARGET_CPU" == "wasm" ]; then
     -s WASM=1 \
     -s ALLOW_MEMORY_GROWTH=1 \
     -s STANDALONE_WASM=1 \
+    --profile \
+    -g \
     -s EXPORTED_RUNTIME_METHODS='["ccall", "cwrap"]' \
+    -s ERROR_ON_UNDEFINED_SYMBOLS=0 \
     -o "$BUILD_DIR/pdfium.html" \
     "$LIBPDFIUMA" \
     --no-entry
-fi
\ No newline at end of file
+fi
